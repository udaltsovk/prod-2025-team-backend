// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.29.3
// source: coworking.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CoworkingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Name           *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Address        *string `protobuf:"bytes,3,req,name=address" json:"address,omitempty"`
	AvailableSeats *uint64 `protobuf:"varint,4,req,name=available_seats,json=availableSeats" json:"available_seats,omitempty"`
	TotalSeats     *uint64 `protobuf:"varint,5,req,name=total_seats,json=totalSeats" json:"total_seats,omitempty"`
}

func (x *CoworkingResponse) Reset() {
	*x = CoworkingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coworking_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoworkingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoworkingResponse) ProtoMessage() {}

func (x *CoworkingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coworking_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoworkingResponse.ProtoReflect.Descriptor instead.
func (*CoworkingResponse) Descriptor() ([]byte, []int) {
	return file_coworking_proto_rawDescGZIP(), []int{0}
}

func (x *CoworkingResponse) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *CoworkingResponse) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CoworkingResponse) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *CoworkingResponse) GetAvailableSeats() uint64 {
	if x != nil && x.AvailableSeats != nil {
		return *x.AvailableSeats
	}
	return 0
}

func (x *CoworkingResponse) GetTotalSeats() uint64 {
	if x != nil && x.TotalSeats != nil {
		return *x.TotalSeats
	}
	return 0
}

type CreateCoworkingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Address *string `protobuf:"bytes,2,req,name=address" json:"address,omitempty"`
}

func (x *CreateCoworkingRequest) Reset() {
	*x = CreateCoworkingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coworking_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCoworkingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCoworkingRequest) ProtoMessage() {}

func (x *CreateCoworkingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coworking_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCoworkingRequest.ProtoReflect.Descriptor instead.
func (*CreateCoworkingRequest) Descriptor() ([]byte, []int) {
	return file_coworking_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCoworkingRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateCoworkingRequest) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

type CreateCoworkingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
}

func (x *CreateCoworkingResponse) Reset() {
	*x = CreateCoworkingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coworking_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCoworkingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCoworkingResponse) ProtoMessage() {}

func (x *CreateCoworkingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coworking_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCoworkingResponse.ProtoReflect.Descriptor instead.
func (*CreateCoworkingResponse) Descriptor() ([]byte, []int) {
	return file_coworking_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCoworkingResponse) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type GetCoworkingByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
}

func (x *GetCoworkingByIDRequest) Reset() {
	*x = GetCoworkingByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coworking_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoworkingByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoworkingByIDRequest) ProtoMessage() {}

func (x *GetCoworkingByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coworking_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoworkingByIDRequest.ProtoReflect.Descriptor instead.
func (*GetCoworkingByIDRequest) Descriptor() ([]byte, []int) {
	return file_coworking_proto_rawDescGZIP(), []int{3}
}

func (x *GetCoworkingByIDRequest) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type UpdateCoworkingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Name    *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Address *string `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
}

func (x *UpdateCoworkingRequest) Reset() {
	*x = UpdateCoworkingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coworking_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCoworkingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCoworkingRequest) ProtoMessage() {}

func (x *UpdateCoworkingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coworking_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCoworkingRequest.ProtoReflect.Descriptor instead.
func (*UpdateCoworkingRequest) Descriptor() ([]byte, []int) {
	return file_coworking_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateCoworkingRequest) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *UpdateCoworkingRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateCoworkingRequest) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

type DeleteCoworkingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
}

func (x *DeleteCoworkingRequest) Reset() {
	*x = DeleteCoworkingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coworking_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCoworkingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCoworkingRequest) ProtoMessage() {}

func (x *DeleteCoworkingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coworking_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCoworkingRequest.ProtoReflect.Descriptor instead.
func (*DeleteCoworkingRequest) Descriptor() ([]byte, []int) {
	return file_coworking_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteCoworkingRequest) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type SeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       *string  `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Number   *uint64  `protobuf:"varint,2,req,name=number" json:"number,omitempty"`
	Type     *string  `protobuf:"bytes,3,req,name=type" json:"type,omitempty"`
	Capacity *uint64  `protobuf:"varint,4,req,name=capacity" json:"capacity,omitempty"`
	Features []string `protobuf:"bytes,5,rep,name=features" json:"features,omitempty"`
	Cost     *float64 `protobuf:"fixed64,6,req,name=cost" json:"cost,omitempty"`
}

func (x *SeatResponse) Reset() {
	*x = SeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coworking_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatResponse) ProtoMessage() {}

func (x *SeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coworking_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatResponse.ProtoReflect.Descriptor instead.
func (*SeatResponse) Descriptor() ([]byte, []int) {
	return file_coworking_proto_rawDescGZIP(), []int{6}
}

func (x *SeatResponse) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *SeatResponse) GetNumber() uint64 {
	if x != nil && x.Number != nil {
		return *x.Number
	}
	return 0
}

func (x *SeatResponse) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *SeatResponse) GetCapacity() uint64 {
	if x != nil && x.Capacity != nil {
		return *x.Capacity
	}
	return 0
}

func (x *SeatResponse) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *SeatResponse) GetCost() float64 {
	if x != nil && x.Cost != nil {
		return *x.Cost
	}
	return 0
}

type CreateSeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number   *uint64  `protobuf:"varint,1,req,name=number" json:"number,omitempty"`
	Type     *string  `protobuf:"bytes,2,req,name=type" json:"type,omitempty"`
	Capacity *uint64  `protobuf:"varint,3,req,name=capacity" json:"capacity,omitempty"`
	Features []string `protobuf:"bytes,4,rep,name=features" json:"features,omitempty"`
	Cost     *float64 `protobuf:"fixed64,5,req,name=cost" json:"cost,omitempty"`
}

func (x *CreateSeatRequest) Reset() {
	*x = CreateSeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coworking_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSeatRequest) ProtoMessage() {}

func (x *CreateSeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coworking_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSeatRequest.ProtoReflect.Descriptor instead.
func (*CreateSeatRequest) Descriptor() ([]byte, []int) {
	return file_coworking_proto_rawDescGZIP(), []int{7}
}

func (x *CreateSeatRequest) GetNumber() uint64 {
	if x != nil && x.Number != nil {
		return *x.Number
	}
	return 0
}

func (x *CreateSeatRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *CreateSeatRequest) GetCapacity() uint64 {
	if x != nil && x.Capacity != nil {
		return *x.Capacity
	}
	return 0
}

func (x *CreateSeatRequest) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *CreateSeatRequest) GetCost() float64 {
	if x != nil && x.Cost != nil {
		return *x.Cost
	}
	return 0
}

type SeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
}

func (x *SeatRequest) Reset() {
	*x = SeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coworking_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatRequest) ProtoMessage() {}

func (x *SeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coworking_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatRequest.ProtoReflect.Descriptor instead.
func (*SeatRequest) Descriptor() ([]byte, []int) {
	return file_coworking_proto_rawDescGZIP(), []int{8}
}

func (x *SeatRequest) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type UpdateSeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       *string  `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Number   *uint64  `protobuf:"varint,2,opt,name=number" json:"number,omitempty"`
	Type     *string  `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Capacity *uint64  `protobuf:"varint,4,opt,name=capacity" json:"capacity,omitempty"`
	Features []string `protobuf:"bytes,5,rep,name=features" json:"features,omitempty"`
	Cost     *float64 `protobuf:"fixed64,6,opt,name=cost" json:"cost,omitempty"`
}

func (x *UpdateSeatRequest) Reset() {
	*x = UpdateSeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coworking_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSeatRequest) ProtoMessage() {}

func (x *UpdateSeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coworking_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSeatRequest.ProtoReflect.Descriptor instead.
func (*UpdateSeatRequest) Descriptor() ([]byte, []int) {
	return file_coworking_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateSeatRequest) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *UpdateSeatRequest) GetNumber() uint64 {
	if x != nil && x.Number != nil {
		return *x.Number
	}
	return 0
}

func (x *UpdateSeatRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *UpdateSeatRequest) GetCapacity() uint64 {
	if x != nil && x.Capacity != nil {
		return *x.Capacity
	}
	return 0
}

func (x *UpdateSeatRequest) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *UpdateSeatRequest) GetCost() float64 {
	if x != nil && x.Cost != nil {
		return *x.Cost
	}
	return 0
}

type GetSeatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  *uint32 `protobuf:"varint,1,req,name=limit" json:"limit,omitempty"`
	Offset *uint64 `protobuf:"varint,2,req,name=offset" json:"offset,omitempty"`
}

func (x *GetSeatsRequest) Reset() {
	*x = GetSeatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coworking_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSeatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeatsRequest) ProtoMessage() {}

func (x *GetSeatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coworking_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeatsRequest.ProtoReflect.Descriptor instead.
func (*GetSeatsRequest) Descriptor() ([]byte, []int) {
	return file_coworking_proto_rawDescGZIP(), []int{10}
}

func (x *GetSeatsRequest) GetLimit() uint32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *GetSeatsRequest) GetOffset() uint64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

type SeatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seats []*SeatResponse `protobuf:"bytes,1,rep,name=seats" json:"seats,omitempty"`
}

func (x *SeatsResponse) Reset() {
	*x = SeatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coworking_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatsResponse) ProtoMessage() {}

func (x *SeatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coworking_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatsResponse.ProtoReflect.Descriptor instead.
func (*SeatsResponse) Descriptor() ([]byte, []int) {
	return file_coworking_proto_rawDescGZIP(), []int{11}
}

func (x *SeatsResponse) GetSeats() []*SeatResponse {
	if x != nil {
		return x.Seats
	}
	return nil
}

var File_coworking_proto protoreflect.FileDescriptor

var file_coworking_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x63, 0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9b, 0x01, 0x0a, 0x11, 0x43, 0x6f,
	0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x0a,
	0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x65, 0x61, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x73, 0x65, 0x61, 0x74, 0x73, 0x18, 0x05, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x65, 0x61, 0x74, 0x73, 0x22, 0x46, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x29, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x56, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x28, 0x0a,
	0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x04, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x02, 0x28, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74,
	0x22, 0x8b, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x04, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x73, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x22, 0x1d,
	0x0a, 0x0b, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9b, 0x01,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x22, 0x3f, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x3e, 0x0a, 0x0d,
	0x53, 0x65, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a,
	0x05, 0x73, 0x65, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63,
	0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x73, 0x65, 0x61, 0x74, 0x73, 0x32, 0xff, 0x04, 0x0a,
	0x09, 0x43, 0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x4f, 0x0a, 0x06, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x63, 0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x6f, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x22, 0x2e, 0x63, 0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x6f, 0x77,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x21, 0x2e, 0x63, 0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x43, 0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x21, 0x2e,
	0x63, 0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x43, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x61, 0x74, 0x12, 0x1c, 0x2e, 0x63, 0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63, 0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x12, 0x16, 0x2e, 0x63, 0x6f, 0x77, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x63, 0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x65, 0x61,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x74, 0x12, 0x1c, 0x2e, 0x63, 0x6f, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63, 0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c,
	0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x61, 0x74, 0x12, 0x16, 0x2e, 0x63,
	0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x63, 0x6f, 0x77, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x53, 0x65, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x03,
	0x5a, 0x01, 0x2f,
}

var (
	file_coworking_proto_rawDescOnce sync.Once
	file_coworking_proto_rawDescData = file_coworking_proto_rawDesc
)

func file_coworking_proto_rawDescGZIP() []byte {
	file_coworking_proto_rawDescOnce.Do(func() {
		file_coworking_proto_rawDescData = protoimpl.X.CompressGZIP(file_coworking_proto_rawDescData)
	})
	return file_coworking_proto_rawDescData
}

var file_coworking_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_coworking_proto_goTypes = []interface{}{
	(*CoworkingResponse)(nil),       // 0: coworking.CoworkingResponse
	(*CreateCoworkingRequest)(nil),  // 1: coworking.CreateCoworkingRequest
	(*CreateCoworkingResponse)(nil), // 2: coworking.CreateCoworkingResponse
	(*GetCoworkingByIDRequest)(nil), // 3: coworking.GetCoworkingByIDRequest
	(*UpdateCoworkingRequest)(nil),  // 4: coworking.UpdateCoworkingRequest
	(*DeleteCoworkingRequest)(nil),  // 5: coworking.DeleteCoworkingRequest
	(*SeatResponse)(nil),            // 6: coworking.SeatResponse
	(*CreateSeatRequest)(nil),       // 7: coworking.CreateSeatRequest
	(*SeatRequest)(nil),             // 8: coworking.SeatRequest
	(*UpdateSeatRequest)(nil),       // 9: coworking.UpdateSeatRequest
	(*GetSeatsRequest)(nil),         // 10: coworking.GetSeatsRequest
	(*SeatsResponse)(nil),           // 11: coworking.SeatsResponse
	(*emptypb.Empty)(nil),           // 12: google.protobuf.Empty
}
var file_coworking_proto_depIdxs = []int32{
	6,  // 0: coworking.SeatsResponse.seats:type_name -> coworking.SeatResponse
	1,  // 1: coworking.Coworking.Create:input_type -> coworking.CreateCoworkingRequest
	3,  // 2: coworking.Coworking.GetByID:input_type -> coworking.GetCoworkingByIDRequest
	4,  // 3: coworking.Coworking.Update:input_type -> coworking.UpdateCoworkingRequest
	5,  // 4: coworking.Coworking.Delete:input_type -> coworking.DeleteCoworkingRequest
	7,  // 5: coworking.Coworking.CreateSeat:input_type -> coworking.CreateSeatRequest
	8,  // 6: coworking.Coworking.GetSeat:input_type -> coworking.SeatRequest
	9,  // 7: coworking.Coworking.UpdateSeat:input_type -> coworking.UpdateSeatRequest
	8,  // 8: coworking.Coworking.DeleteSeat:input_type -> coworking.SeatRequest
	10, // 9: coworking.Coworking.GetSeats:input_type -> coworking.GetSeatsRequest
	2,  // 10: coworking.Coworking.Create:output_type -> coworking.CreateCoworkingResponse
	0,  // 11: coworking.Coworking.GetByID:output_type -> coworking.CoworkingResponse
	0,  // 12: coworking.Coworking.Update:output_type -> coworking.CoworkingResponse
	12, // 13: coworking.Coworking.Delete:output_type -> google.protobuf.Empty
	6,  // 14: coworking.Coworking.CreateSeat:output_type -> coworking.SeatResponse
	6,  // 15: coworking.Coworking.GetSeat:output_type -> coworking.SeatResponse
	6,  // 16: coworking.Coworking.UpdateSeat:output_type -> coworking.SeatResponse
	12, // 17: coworking.Coworking.DeleteSeat:output_type -> google.protobuf.Empty
	11, // 18: coworking.Coworking.GetSeats:output_type -> coworking.SeatsResponse
	10, // [10:19] is the sub-list for method output_type
	1,  // [1:10] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_coworking_proto_init() }
func file_coworking_proto_init() {
	if File_coworking_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_coworking_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoworkingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coworking_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCoworkingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coworking_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCoworkingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coworking_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoworkingByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coworking_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCoworkingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coworking_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCoworkingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coworking_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coworking_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coworking_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coworking_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coworking_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSeatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coworking_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_coworking_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_coworking_proto_goTypes,
		DependencyIndexes: file_coworking_proto_depIdxs,
		MessageInfos:      file_coworking_proto_msgTypes,
	}.Build()
	File_coworking_proto = out.File
	file_coworking_proto_rawDesc = nil
	file_coworking_proto_goTypes = nil
	file_coworking_proto_depIdxs = nil
}
